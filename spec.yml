openapi: 3.0.2
servers:
  - url: https://$API_URL
info:
  title: Freenalytics API
  description: This site contains the documentation for the Freenalytics API.
  version: 0.1.0
tags:
  - name: Auth
    description: This section contains the supported operations for Auth.
  - name: User
    description: This section contains the supported operations for User.
  - name: Application
    description: This section contains the supported operations for Application.
paths:
  /auth/registration-open:
    get:
      tags:
        - Auth
      summary: Check if user registration is enabled.
      description: Check if user registration is enabled on the server. If it is
        disabled, users will not be able to register new accounts.
      operationId: registrationOpen
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegistrationOpenResponseSchema"
              example:
                $ref: "#/components/examples/RegistrationOpenResponseSchema"
          description: Successful response
      parameters: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user account.
      description: Register a new user account. This route will only work if the
        server has enabled user registration.
      operationId: register
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegisterResponseSchema"
              example:
                $ref: "#/components/examples/RegisterResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "403":
          description: You do not have access to this resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 403
                error:
                  name: ForbiddenRequestError
                  description: You do not have access to this resource.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequestSchema"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login with your user account.
      description: Login with your user account. Responds with a bearer token to
        authenticate further requests.
      operationId: login
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/LoginResponseSchema"
              example:
                $ref: "#/components/examples/LoginResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestSchema"
  /auth/change-password:
    put:
      tags:
        - Auth
      summary: Change your user account password.
      description: Change your user account password.
      operationId: changePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ChangePasswordResponseSchema"
              example:
                $ref: "#/components/examples/ChangePasswordResponseSchema"
          description: Successful response
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ChangePasswordRequestSchema"
      security:
        - bearer_token: []
  /users:
    get:
      tags:
        - User
      summary: Get all users.
      description: Get all registered users in the platform.
      operationId: getAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/me:
    get:
      tags:
        - User
      summary: Get the current user.
      description: Get the user information for the requesting user.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/:username:
    patch:
      tags:
        - User
      summary: Update the current user.
      description: Update the user information for the requesting user.
      operationId: updateCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - User
      summary: Get a user by their username.
      description: Get a user by their username.
      operationId: getUserByUsername
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications:
    get:
      tags:
        - Application
      summary: Get all applications for the requesting user.
      description: Get all applications for the requesting user.
      operationId: getAllApplicationsForUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
    post:
      tags:
        - Application
      summary: Create a new application for the requesting user.
      description: >-
        Create a new application for the requesting user.
          The `schema` field in the request body should be a valid JSON Schema that describes the data
          that will be uploaded in the future.
      operationId: createApplicationForUser
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ApplicationCreateRequestSchema"
      security:
        - bearer_token: []
  /applications/:domain:
    get:
      tags:
        - Application
      summary: Get an application by domain for the requesting user.
      description: Get an application by domain for the requesting user.
      operationId: getApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
    patch:
      tags:
        - Application
      summary: Update an application by domain for the requesting user.
      description: Update an application by domain for the requesting user.
      operationId: updateApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to update.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationUpdateRequestSchema"
      security:
        - bearer_token: []
    delete:
      tags:
        - Application
      summary: Delete an application by domain for the requesting user.
      description: Delete an application by domain for the requesting user.
      operationId: deleteApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDeleteResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to delete.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications/:domain/data:
    post:
      tags:
        - Application
      summary: Create a new data entry for an application for the requesting user.
      description: >-
        Create a new data entry for an application for the requesting user.
          The shape of the request body will depend on the schema that was used to create the application.
      operationId: createApplicationData
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationDataRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - Application
      summary: Get data entries for an application for the requesting user.
      description: Get paginated data entries for an application for the requesting
        user in descending order by creation date.
      operationId: getApplicationData
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataPaginatedResponseSchema"
          description: Successful response
        "400":
          description: The server could not handle your request. Please verify that your
            request is correct.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: BadRequestError
                  description: The server could not handle your request. Please verify that your
                    request is correct.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: The index cursor where to start the list of data entries. Defaults
            to `0`.
          in: query
          required: false
          schema:
            type: number
        - name: limit
          description: The number of data entries to return. Defaults to `50`.
          in: query
          required: false
          schema:
            type: number
      security:
        - bearer_token: []
components:
  schemas:
    RegisterRequestSchema:
      required:
        - username
        - password
        - locale
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          pattern: ^[\w._-]*$
          type: string
        password:
          minLength: 8
          type: string
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    RegisterResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    LoginRequestSchema:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    LoginResponseSchema:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      additionalProperties: false
    RegistrationOpenResponseSchema:
      required:
        - open
      type: object
      properties:
        open:
          type: boolean
      additionalProperties: false
    ChangePasswordRequestSchema:
      required:
        - old_password
        - new_password
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      additionalProperties: false
    ChangePasswordResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    UserResponseSchema:
      required:
        - username
        - locale
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        username:
          type: string
        locale:
          type: string
          enum:
            - en
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    UserUpdateRequestSchema:
      type: object
      properties:
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    ApplicationCreateRequestSchema:
      required:
        - name
        - type
        - schema
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        schema:
          type: string
        connectors:
          default: []
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationUpdateRequestSchema:
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationDeleteResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ApplicationResponseSchema:
      required:
        - name
        - owner
        - domain
        - type
        - connectors
        - template
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
        domain:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
        template:
          required:
            - raw_schema
            - schema
          type: object
          properties:
            raw_schema:
              type: string
            schema:
              required:
                - type
                - properties
                - required
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - object
                properties:
                  type: object
                  properties: {}
                  additionalProperties: false
                required:
                  type: array
                  items:
                    type: string
              additionalProperties: false
          additionalProperties: false
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    ApplicationDataRequestSchema:
      required:
        - example
      type: object
      properties:
        example:
          type: string
      additionalProperties: false
    ApplicationDataResponseSchema:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
        payload:
          required:
            - example
          type: object
          properties:
            example:
              type: string
          additionalProperties: false
      additionalProperties: false
    ApplicationDataPaginatedResponseSchema:
      required:
        - result
        - pagination
      type: object
      properties:
        result:
          type: array
          items:
            required:
              - domain
              - createdAt
            type: object
            properties:
              domain:
                type: string
              payload:
                required:
                  - example
                type: object
                properties:
                  example:
                    type: string
                additionalProperties: false
              createdAt:
                format: date-time
                type: string
            additionalProperties: false
        pagination:
          required:
            - limit
            - current
            - previous
            - next
            - total
            - isLast
          type: object
          properties:
            limit:
              type: integer
            current:
              type: integer
            previous:
              type: integer
            next:
              type: integer
            total:
              type: integer
            isLast:
              type: boolean
          additionalProperties: false
      additionalProperties: false
  requestBodies:
    RegisterRequestSchema:
      description: Request body for RegisterRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterRequestSchema"
    RegisterResponseSchema:
      description: Request body for RegisterResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterResponseSchema"
    LoginRequestSchema:
      description: Request body for LoginRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequestSchema"
    LoginResponseSchema:
      description: Request body for LoginResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponseSchema"
    RegistrationOpenResponseSchema:
      description: Request body for RegistrationOpenResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationOpenResponseSchema"
    ChangePasswordRequestSchema:
      description: Request body for ChangePasswordRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordRequestSchema"
    ChangePasswordResponseSchema:
      description: Request body for ChangePasswordResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordResponseSchema"
    UserResponseSchema:
      description: Request body for UserResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserResponseSchema"
    UserUpdateRequestSchema:
      description: Request body for UserUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequestSchema"
    ApplicationCreateRequestSchema:
      description: Request body for ApplicationCreateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationCreateRequestSchema"
    ApplicationUpdateRequestSchema:
      description: Request body for ApplicationUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationUpdateRequestSchema"
    ApplicationDeleteResponseSchema:
      description: Request body for ApplicationDeleteResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
    ApplicationResponseSchema:
      description: Request body for ApplicationResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationResponseSchema"
    ApplicationDataRequestSchema:
      description: Request body for ApplicationDataRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataRequestSchema"
    ApplicationDataResponseSchema:
      description: Request body for ApplicationDataResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataResponseSchema"
    ApplicationDataPaginatedResponseSchema:
      description: Request body for ApplicationDataPaginatedResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
  examples:
    RegisterRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: YJBLX4RX4SVJxoUZFJSWT6fbzXb1FKgT1SDU.rb57lY8EQMuIYgTfwqws
          password: fq58g0k2hzm
          locale: en
    RegisterRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: VFmU.s3PqeXSvj.K4pq-bOaUDUJb18cZXHUHTeMskrq1dPUswO8CNsVjKCuqGIRCimyMkzYZ7TWNfLKOlnEBH1sBb3iDXfrqbz
            password: z3qj5ovwr99
            locale: en
          - username: phvVn9pTXgNKBjLjHg1smufMgGszeJszicmfSlgdf8PP3lAWnyS62sm.GbbLb
            password: 3ae0yl3aag4
            locale: en
          - username: wDZdJuLNkfGxl1Zch-lDJkFhLij4_mWrGT4RUiL2HTPkblAciBKhtg.DXX1dyXQ37.rV3kNqkqnS.1UjTU-K
            password: tnxarfrfdz9
            locale: en
    RegisterResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: aah7817bp8a
    RegisterResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: j1u6le6ypwp
          - message: nzo0xbycbe
          - message: 5zjngvvabqx
    LoginRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: evvn6ulfvag
          password: mdqy5ofuf4
    LoginRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: v14dk7l8mh
            password: b9msc9ecsl
          - username: rg6ai70poj
            password: me6nfkpxfkr
          - username: 1u8cvkbmmxi
            password: rfyh6t565a
    LoginResponseSchema:
      value:
        success: true
        status: 200
        data:
          token: tqdy8lgsvhj
    LoginResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - token: axievovfxmg
          - token: 8wz3i5tjx1q
          - token: 5dlh92mm15
    RegistrationOpenResponseSchema:
      value:
        success: true
        status: 200
        data:
          open: false
    RegistrationOpenResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - open: true
          - open: false
          - open: false
    ChangePasswordRequestSchema:
      value:
        success: true
        status: 200
        data:
          old_password: oi7z4r2c7t
          new_password: u87f4bqye4k
    ChangePasswordRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - old_password: 1tfdxepjq4d
            new_password: mxui9c3julr
          - old_password: 66mxjddshf9
            new_password: tid9ypkr3kp
          - old_password: lxfymm76lwk
            new_password: sozt28vt1xl
    ChangePasswordResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: y58sr0n2ghr
    ChangePasswordResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: cb9wtw8cvku
          - message: 52s6a2adqbm
          - message: 1bd6byhhzfv
    UserResponseSchema:
      value:
        success: true
        status: 200
        data:
          username: hw8id21n4bt
          locale: en
          createdAt: 2022-10-29T03:04:21.598Z
          lastModifiedAt: 2022-10-29T03:04:21.598Z
    UserResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: wc1rdvewyg
            locale: en
            createdAt: 2022-10-29T03:04:21.602Z
            lastModifiedAt: 2022-10-29T03:04:21.603Z
          - username: p58tvjzhmh
            locale: en
            createdAt: 2022-10-29T03:04:21.604Z
            lastModifiedAt: 2022-10-29T03:04:21.604Z
          - username: l1xpur4qkz
            locale: en
            createdAt: 2022-10-29T03:04:21.606Z
            lastModifiedAt: 2022-10-29T03:04:21.606Z
    UserUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          locale: en
    UserUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - locale: en
          - locale: en
          - locale: en
    ApplicationCreateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: 8s9kgx3nsb2
          type: desktop
          schema: 2b950dvf64a
          connectors: []
    ApplicationCreateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: gk0kl5xq9mu
            type: web
            schema: h07ey5m2lh
            connectors: []
          - name: pevif25p4sm
            type: web
            schema: l1c4h01afag
            connectors: []
          - name: 53s4eia2dy4
            type: other
            schema: 58ku0msr5ch
            connectors: []
    ApplicationUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: r9xajmyz2qj
          type: desktop
          connectors:
            - package_url: ftp://www.r5jqmhk86fh.com
              language: 4eqhsb17kws
    ApplicationUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: 9mkpuxp5o55
            type: web
            connectors:
              - package_url: https://www.8offxer5vzj.gov
                language: 8hikroyr1lm
          - name: 67kmxhm0n38
            type: desktop
            connectors:
              - package_url: http://www.senu233ged.gov
                language: d1n9ryxen76
          - name: m5d9sawzlx
            type: mobile
            connectors:
              - package_url: ftp://www.4qeo34yu89p.gov
                language: wng0ts59rd
    ApplicationDeleteResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: dswxnddcbgc
    ApplicationDeleteResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: uuu2037e4sm
          - message: wa3tk0lrkci
          - message: 5ae8j073q2v
    ApplicationResponseSchema:
      value:
        success: true
        status: 200
        data:
          name: rps6horzj5
          owner: s3mwrntmowm
          domain: 403y2mrg3sk
          type: mobile
          connectors:
            - package_url: https://www.jy6el2e1je8.com
              language: 6jz1nx5t42t
          template:
            raw_schema: 17lwkpm9u1o
            schema:
              type: object
              properties: {}
              required:
                - 9m8ltxmcqcd
          createdAt: 2022-10-29T03:04:21.648Z
          lastModifiedAt: 2022-10-29T03:04:21.648Z
    ApplicationResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: j9ln2wqdz4
            owner: 51j0j4q6n0a
            domain: 2m53jx9mvf3
            type: web
            connectors:
              - package_url: http://www.ue13apr0jy.com
                language: 8ekx9qmsr2y
            template:
              raw_schema: yj0bwcf3mh8
              schema:
                type: object
                properties: {}
                required:
                  - yiim1fz34o
            createdAt: 2022-10-29T03:04:21.657Z
            lastModifiedAt: 2022-10-29T03:04:21.657Z
          - name: lpuu5n6y8g
            owner: 3xbeghlkj5i
            domain: 7sezmvokqvt
            type: mobile
            connectors:
              - package_url: http://www.7cbprwum14x.net
                language: 99yapn0742
            template:
              raw_schema: rn2pk0bpfc9
              schema:
                type: object
                properties: {}
                required:
                  - cmelqf1m6u
            createdAt: 2022-10-29T03:04:21.666Z
            lastModifiedAt: 2022-10-29T03:04:21.666Z
          - name: 081stwnusv5r
            owner: lb44obqp9wq
            domain: ye6nd78jywr
            type: other
            connectors:
              - package_url: http://www.bmgusqe66jq.com
                language: 3p9qwb9h6z9
            template:
              raw_schema: hokokiml28
              schema:
                type: object
                properties: {}
                required:
                  - 2ohmg8ddkqe
            createdAt: 2022-10-29T03:04:21.679Z
            lastModifiedAt: 2022-10-29T03:04:21.679Z
    ApplicationDataRequestSchema:
      value:
        success: true
        status: 200
        data:
          example: g3gmma2mdrt
    ApplicationDataRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - example: y08677pxv6
          - example: 52qnuj9oy8p
          - example: nw7u0lkge8h
    ApplicationDataResponseSchema:
      value:
        success: true
        status: 200
        data:
          domain: unpqtq1xkhi
          payload:
            example: d727naf7zgm
    ApplicationDataResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - domain: 4oqfknjsd8h
            payload:
              example: xx0ehwn1rzk
          - domain: pmd94qln09a
            payload:
              example: 1krxnf3vjgn
          - domain: tmgeyfaffcg
            payload:
              example: hglmdf573t7
    ApplicationDataPaginatedResponseSchema:
      value:
        success: true
        status: 200
        data:
          result:
            - domain: bv9yyiqdd8q
              payload:
                example: bvezgomnbcv
              createdAt: 2022-10-29T03:04:21.692Z
          pagination:
            limit: 1
            current: 2
            previous: 3
            next: 4
            total: 3
            isLast: true
    ApplicationDataPaginatedResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - result:
              - domain: yxcwpcaim3
                payload:
                  example: 7c83hzw01gv
                createdAt: 2022-10-29T03:04:21.704Z
            pagination:
              limit: 2
              current: 4
              previous: 1
              next: 3
              total: 4
              isLast: false
          - result:
              - domain: axg32fhyw0b
                payload:
                  example: 9crgi8xwor
                createdAt: 2022-10-29T03:04:21.716Z
            pagination:
              limit: 3
              current: 3
              previous: 4
              next: 4
              total: 2
              isLast: true
          - result:
              - domain: 48dins9b8za
                payload:
                  example: 35zss21ehqo
                createdAt: 2022-10-29T03:04:21.729Z
            pagination:
              limit: 4
              current: 3
              previous: 4
              next: 3
              total: 2
              isLast: true
  securitySchemes:
    bearer_token:
      name: JWT Access Token
      description: An access token granted by the server on user login.
      in: header
      type: http
      scheme: Bearer
      bearerFormat: JWT

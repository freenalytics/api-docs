openapi: 3.0.2
servers:
  - url: https://$API_URL
info:
  title: Freenalytics API
  description: This site contains the documentation for the Freenalytics API.
  version: 0.1.0
tags:
  - name: Auth
    description: This section contains the supported operations for Auth.
  - name: User
    description: This section contains the supported operations for User.
  - name: Application
    description: This section contains the supported operations for Application.
paths:
  /auth/registration-open:
    get:
      tags:
        - Auth
      summary: Check if user registration is enabled.
      description: Check if user registration is enabled on the server. If it is
        disabled, users will not be able to register new accounts.
      operationId: registrationOpen
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegistrationOpenResponseSchema"
              example:
                $ref: "#/components/examples/RegistrationOpenResponseSchema"
          description: Successful response
      parameters: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user account.
      description: Register a new user account. This route will only work if the
        server has enabled user registration.
      operationId: register
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegisterResponseSchema"
              example:
                $ref: "#/components/examples/RegisterResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "403":
          description: You do not have access to this resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 403
                error:
                  name: ForbiddenRequestError
                  description: You do not have access to this resource.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequestSchema"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login with your user account.
      description: Login with your user account. Responds with a bearer token to
        authenticate further requests.
      operationId: login
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/LoginResponseSchema"
              example:
                $ref: "#/components/examples/LoginResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestSchema"
  /auth/change-password:
    put:
      tags:
        - Auth
      summary: Change your user account password.
      description: Change your user account password.
      operationId: changePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ChangePasswordResponseSchema"
              example:
                $ref: "#/components/examples/ChangePasswordResponseSchema"
          description: Successful response
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ChangePasswordRequestSchema"
      security:
        - bearer_token: []
  /users:
    get:
      tags:
        - User
      summary: Get all users.
      description: Get all registered users in the platform.
      operationId: getAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/me:
    get:
      tags:
        - User
      summary: Get the current user.
      description: Get the user information for the requesting user.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/:username:
    patch:
      tags:
        - User
      summary: Update the current user.
      description: Update the user information for the requesting user.
      operationId: updateCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - User
      summary: Get a user by their username.
      description: Get a user by their username.
      operationId: getUserByUsername
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications:
    get:
      tags:
        - Application
      summary: Get all applications for the requesting user.
      description: Get all applications for the requesting user.
      operationId: getAllApplicationsForUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
    post:
      tags:
        - Application
      summary: Create a new application for the requesting user.
      description: >-
        Create a new application for the requesting user.
          The `schema` field in the request body should be a valid JSON Schema that describes the data
          that will be uploaded in the future.
      operationId: createApplicationForUser
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ApplicationCreateRequestSchema"
      security:
        - bearer_token: []
  /applications/:domain:
    get:
      tags:
        - Application
      summary: Get an application by domain for the requesting user.
      description: Get an application by domain for the requesting user.
      operationId: getApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
    patch:
      tags:
        - Application
      summary: Update an application by domain for the requesting user.
      description: Update an application by domain for the requesting user.
      operationId: updateApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to update.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationUpdateRequestSchema"
      security:
        - bearer_token: []
    delete:
      tags:
        - Application
      summary: Delete an application by domain for the requesting user.
      description: Delete an application by domain for the requesting user.
      operationId: deleteApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDeleteResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to delete.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications/:domain/data:
    post:
      tags:
        - Application
      summary: Create a new data entry for an application for the requesting user.
      description: >-
        Create a new data entry for an application for the requesting user.
          The shape of the request body will depend on the schema that was used to create the application.
      operationId: createApplicationData
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationDataRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - Application
      summary: Get data entries for an application for the requesting user.
      description: Get paginated data entries for an application for the requesting
        user in descending order by creation date.
      operationId: getApplicationData
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataPaginatedResponseSchema"
          description: Successful response
        "400":
          description: The server could not handle your request. Please verify that your
            request is correct.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: BadRequestError
                  description: The server could not handle your request. Please verify that your
                    request is correct.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: The index cursor where to start the list of data entries. Defaults
            to `0`.
          in: query
          required: false
          schema:
            type: number
        - name: limit
          description: The number of data entries to return. Defaults to `50`.
          in: query
          required: false
          schema:
            type: number
      security:
        - bearer_token: []
  /applications/:domain/data/csv:
    get:
      tags:
        - Application
      summary: Export all data entries for an application for the requesting user as
        CSV.
      description: Export all data entries for an application for the requesting user
        as CSV.
      operationId: getApplicationDataAsCsv
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: string
                format: binary
          description: Successful binary response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
components:
  schemas:
    RegisterRequestSchema:
      required:
        - username
        - password
        - locale
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          pattern: ^[\w._-]*$
          type: string
        password:
          minLength: 8
          type: string
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    RegisterResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    LoginRequestSchema:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    LoginResponseSchema:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      additionalProperties: false
    RegistrationOpenResponseSchema:
      required:
        - open
      type: object
      properties:
        open:
          type: boolean
      additionalProperties: false
    ChangePasswordRequestSchema:
      required:
        - old_password
        - new_password
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      additionalProperties: false
    ChangePasswordResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    UserResponseSchema:
      required:
        - username
        - locale
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        username:
          type: string
        locale:
          type: string
          enum:
            - en
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    UserUpdateRequestSchema:
      type: object
      properties:
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    ApplicationCreateRequestSchema:
      required:
        - name
        - type
        - schema
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        schema:
          type: string
        connectors:
          default: []
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationUpdateRequestSchema:
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationDeleteResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ApplicationResponseSchema:
      required:
        - name
        - owner
        - domain
        - type
        - connectors
        - template
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
        domain:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
        template:
          required:
            - raw_schema
            - schema
          type: object
          properties:
            raw_schema:
              type: string
            schema:
              required:
                - type
                - properties
                - required
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - object
                properties:
                  type: object
                  properties: {}
                  additionalProperties: false
                required:
                  type: array
                  items:
                    type: string
              additionalProperties: false
          additionalProperties: false
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    ApplicationDataRequestSchema:
      required:
        - example
      type: object
      properties:
        example:
          type: string
      additionalProperties: false
    ApplicationDataResponseSchema:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
        payload:
          required:
            - example
          type: object
          properties:
            example:
              type: string
          additionalProperties: false
      additionalProperties: false
    ApplicationDataPaginatedResponseSchema:
      required:
        - result
        - pagination
      type: object
      properties:
        result:
          type: array
          items:
            required:
              - domain
              - createdAt
            type: object
            properties:
              domain:
                type: string
              payload:
                required:
                  - example
                type: object
                properties:
                  example:
                    type: string
                additionalProperties: false
              createdAt:
                format: date-time
                type: string
            additionalProperties: false
        pagination:
          required:
            - limit
            - current
            - previous
            - next
            - total
            - isLast
          type: object
          properties:
            limit:
              type: integer
            current:
              type: integer
            previous:
              type: integer
            next:
              type: integer
            total:
              type: integer
            isLast:
              type: boolean
          additionalProperties: false
      additionalProperties: false
  requestBodies:
    RegisterRequestSchema:
      description: Request body for RegisterRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterRequestSchema"
    RegisterResponseSchema:
      description: Request body for RegisterResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterResponseSchema"
    LoginRequestSchema:
      description: Request body for LoginRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequestSchema"
    LoginResponseSchema:
      description: Request body for LoginResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponseSchema"
    RegistrationOpenResponseSchema:
      description: Request body for RegistrationOpenResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationOpenResponseSchema"
    ChangePasswordRequestSchema:
      description: Request body for ChangePasswordRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordRequestSchema"
    ChangePasswordResponseSchema:
      description: Request body for ChangePasswordResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordResponseSchema"
    UserResponseSchema:
      description: Request body for UserResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserResponseSchema"
    UserUpdateRequestSchema:
      description: Request body for UserUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequestSchema"
    ApplicationCreateRequestSchema:
      description: Request body for ApplicationCreateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationCreateRequestSchema"
    ApplicationUpdateRequestSchema:
      description: Request body for ApplicationUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationUpdateRequestSchema"
    ApplicationDeleteResponseSchema:
      description: Request body for ApplicationDeleteResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
    ApplicationResponseSchema:
      description: Request body for ApplicationResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationResponseSchema"
    ApplicationDataRequestSchema:
      description: Request body for ApplicationDataRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataRequestSchema"
    ApplicationDataResponseSchema:
      description: Request body for ApplicationDataResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataResponseSchema"
    ApplicationDataPaginatedResponseSchema:
      description: Request body for ApplicationDataPaginatedResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
  examples:
    RegisterRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: US0fmD3WxZRbfsm2OrR2x3l8H-1VzCtViQbiL-tF84JVAExme33ZTWb3_09t6hKZzQi_
          password: b2tq9bwzyyc
          locale: en
    RegisterRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: 3W4_U.jUSI.bozUCKu7Of_-TI.jjk9cPFdzzTaQzgff8_sZZFlfxrtI0v3ST1x_.NHnhLZMoLvD7K8Xmk4
            password: va4niemevvs
            locale: en
          - username: 1NyzBY03rl7rprTcIHzxpvWZVw5Ob3LZwygGLhWH
            password: vyylj2jvz6
            locale: en
          - username: ZSanvd4iDnpTz3qopFixKdc1qn2hNAla-JupKVxIRUlEIo6JDFNIh0Lx
            password: mgf5klbv5rm
            locale: en
    RegisterResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: bndmr2vvn7
    RegisterResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: jexl5cgvlt
          - message: 6k8ii7y8lgq
          - message: 235bs1r3u37
    LoginRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: 785pp2dr8i
          password: 62vgr2l51bg
    LoginRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: dcvoyzb4ymb
            password: xagiqoqxbv
          - username: 6kh9e37g0rf
            password: mw4oj2qdlq
          - username: wnkau07x18
            password: rkl77gbh9u
    LoginResponseSchema:
      value:
        success: true
        status: 200
        data:
          token: lvih9v7kkr
    LoginResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - token: tpudqbp1dtd
          - token: xytkz7ka4c
          - token: aecd9syw0ud
    RegistrationOpenResponseSchema:
      value:
        success: true
        status: 200
        data:
          open: false
    RegistrationOpenResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - open: false
          - open: true
          - open: false
    ChangePasswordRequestSchema:
      value:
        success: true
        status: 200
        data:
          old_password: 9zof4un77fp
          new_password: j3ugylhlsu8
    ChangePasswordRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - old_password: vi5s9dont1d
            new_password: 6f3nnz13kjv
          - old_password: nqcfasisik
            new_password: cxcysy1yc4p
          - old_password: 1yh8tj0zqoq
            new_password: btugh0vemke
    ChangePasswordResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: hofuxj9cwbg
    ChangePasswordResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: xbgkn0o47cg
          - message: qh6wxybjdue
          - message: usd2fm27qn
    UserResponseSchema:
      value:
        success: true
        status: 200
        data:
          username: o6vxyiw4jgj
          locale: en
          createdAt: 2022-12-03T11:19:03.020Z
          lastModifiedAt: 2022-12-03T11:19:03.020Z
    UserResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: bzsrm4k3m85
            locale: en
            createdAt: 2022-12-03T11:19:03.032Z
            lastModifiedAt: 2022-12-03T11:19:03.032Z
          - username: plnqy3x7jbm
            locale: en
            createdAt: 2022-12-03T11:19:03.033Z
            lastModifiedAt: 2022-12-03T11:19:03.034Z
          - username: g1i95ouy2jp
            locale: en
            createdAt: 2022-12-03T11:19:03.035Z
            lastModifiedAt: 2022-12-03T11:19:03.036Z
    UserUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          locale: en
    UserUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - locale: en
          - locale: en
          - locale: en
    ApplicationCreateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: shpxnluagxg
          type: web
          schema: e226uiq93pq
          connectors: []
    ApplicationCreateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: zlzwnwbnmkb
            type: web
            schema: s1m26q8dhhe
            connectors: []
          - name: ymw1tehqhxn
            type: mobile
            schema: kkfbzj4fk6
            connectors: []
          - name: n904py0bjkr
            type: server
            schema: t4aixwmi0r
            connectors: []
    ApplicationUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: 67zd48hm9ql
          type: mobile
          connectors:
            - package_url: http://www.c9kcgpqwnid.com
              language: 2v3qe0jbhat
    ApplicationUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: vokudnwanum
            type: server
            connectors:
              - package_url: ftp://www.gfkfuk9dud.gov
                language: 234myrqmq7e
          - name: levhh19gehg
            type: web
            connectors:
              - package_url: ftp://www.qmml4gmilmh.gov
                language: f41a8gep6g
          - name: w0u17c72yum
            type: desktop
            connectors:
              - package_url: https://www.8qflkjzs8mj.net
                language: 8js1kf4ryp3
    ApplicationDeleteResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: z8dc56gg7wf
    ApplicationDeleteResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: wi59v1qaxc
          - message: oxuice6ybb
          - message: 582s0a74jyp
    ApplicationResponseSchema:
      value:
        success: true
        status: 200
        data:
          name: v1mebeo8p98
          owner: zhdvzu8vfc
          domain: oroei51j5u
          type: other
          connectors:
            - package_url: ftp://www.uhuox16ds2.gov
              language: 64nweiay2ij
          template:
            raw_schema: ybltt1te1f
            schema:
              type: object
              properties: {}
              required:
                - c26m4hl21j5
          createdAt: 2022-12-03T11:19:03.085Z
          lastModifiedAt: 2022-12-03T11:19:03.085Z
    ApplicationResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: 5vxtpely2kb
            owner: ia9m07ucaog
            domain: h8r34uv3rm4
            type: web
            connectors:
              - package_url: http://www.aarlm8eoq36.gov
                language: 0cbfi8dudcxl
            template:
              raw_schema: lp3jtfqaez
              schema:
                type: object
                properties: {}
                required:
                  - xojs7k6a8wt
            createdAt: 2022-12-03T11:19:03.094Z
            lastModifiedAt: 2022-12-03T11:19:03.094Z
          - name: 7k45115hmu
            owner: 2qto0f0q8bg
            domain: j78zr7tzv9
            type: desktop
            connectors:
              - package_url: https://www.8awc07ytqvx.gov
                language: xch7s67gwb
            template:
              raw_schema: cs9f2a66sna
              schema:
                type: object
                properties: {}
                required:
                  - 6btrdb4me8a
            createdAt: 2022-12-03T11:19:03.105Z
            lastModifiedAt: 2022-12-03T11:19:03.105Z
          - name: 6e2fuqhrwy5
            owner: 786icqacps2
            domain: m7z6ndz5j9
            type: mobile
            connectors:
              - package_url: http://www.6ifte8xqe5c.net
                language: on9ei897as9
            template:
              raw_schema: vawya0aq2u
              schema:
                type: object
                properties: {}
                required:
                  - gzoijh8xot5
            createdAt: 2022-12-03T11:19:03.118Z
            lastModifiedAt: 2022-12-03T11:19:03.118Z
    ApplicationDataRequestSchema:
      value:
        success: true
        status: 200
        data:
          example: b0exlbmcett
    ApplicationDataRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - example: dmvazh8h15k
          - example: 6w40wabk8tf
          - example: 1tk33md8wgfh
    ApplicationDataResponseSchema:
      value:
        success: true
        status: 200
        data:
          domain: w7442vdt53j
          payload:
            example: 6h1olt4b1p
    ApplicationDataResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - domain: b4qmh652ij
            payload:
              example: du1wmcefsl8
          - domain: 42g8b5yqtvt
            payload:
              example: yadh13bl42f
          - domain: 9dc48a89pb8
            payload:
              example: bnmy699rdg
    ApplicationDataPaginatedResponseSchema:
      value:
        success: true
        status: 200
        data:
          result:
            - domain: meoag8o0n1r
              payload:
                example: vmcvlsgwqjp
              createdAt: 2022-12-03T11:19:03.130Z
          pagination:
            limit: 1
            current: 2
            previous: 3
            next: 3
            total: 2
            isLast: true
    ApplicationDataPaginatedResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - result:
              - domain: 5bl9fwvtzmh
                payload:
                  example: 4m3nqn35l5q
                createdAt: 2022-12-03T11:19:03.144Z
            pagination:
              limit: 2
              current: 3
              previous: 4
              next: 3
              total: 4
              isLast: true
          - result:
              - domain: aytlsm5ssn8
                payload:
                  example: 69ibkspjtvb
                createdAt: 2022-12-03T11:19:03.156Z
            pagination:
              limit: 3
              current: 1
              previous: 2
              next: 3
              total: 3
              isLast: false
          - result:
              - domain: hdg5dzpo4iw
                payload:
                  example: bsibxlqdbwg
                createdAt: 2022-12-03T11:19:03.165Z
            pagination:
              limit: 3
              current: 4
              previous: 1
              next: 1
              total: 4
              isLast: true
  securitySchemes:
    bearer_token:
      name: JWT Access Token
      description: An access token granted by the server on user login.
      in: header
      type: http
      scheme: Bearer
      bearerFormat: JWT

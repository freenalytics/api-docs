openapi: 3.0.2
servers:
  - url: https://$API_URL
info:
  title: Freenalytics API
  description: This site contains the documentation for the Freenalytics API.
  version: 0.1.0
tags:
  - name: Auth
    description: This section contains the supported operations for Auth.
  - name: User
    description: This section contains the supported operations for User.
  - name: Application
    description: This section contains the supported operations for Application.
paths:
  /auth/registration-open:
    get:
      tags:
        - Auth
      summary: Check if user registration is enabled.
      description: Check if user registration is enabled on the server. If it is
        disabled, users will not be able to register new accounts.
      operationId: registrationOpen
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegistrationOpenResponseSchema"
              example:
                $ref: "#/components/examples/RegistrationOpenResponseSchema"
          description: Successful response
      parameters: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user account.
      description: Register a new user account. This route will only work if the
        server has enabled user registration.
      operationId: register
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegisterResponseSchema"
              example:
                $ref: "#/components/examples/RegisterResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "403":
          description: You do not have access to this resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 403
                error:
                  name: ForbiddenRequestError
                  description: You do not have access to this resource.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequestSchema"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login with your user account.
      description: Login with your user account. Responds with a bearer token to
        authenticate further requests.
      operationId: login
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/LoginResponseSchema"
              example:
                $ref: "#/components/examples/LoginResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestSchema"
  /auth/change-password:
    put:
      tags:
        - Auth
      summary: Change your user account password.
      description: Change your user account password.
      operationId: changePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ChangePasswordResponseSchema"
              example:
                $ref: "#/components/examples/ChangePasswordResponseSchema"
          description: Successful response
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ChangePasswordRequestSchema"
      security:
        - bearer_token: []
  /users:
    get:
      tags:
        - User
      summary: Get all users.
      description: Get all registered users in the platform.
      operationId: getAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/me:
    get:
      tags:
        - User
      summary: Get the current user.
      description: Get the user information for the requesting user.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/:username:
    patch:
      tags:
        - User
      summary: Update the current user.
      description: Update the user information for the requesting user.
      operationId: updateCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - User
      summary: Get a user by their username.
      description: Get a user by their username.
      operationId: getUserByUsername
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications:
    get:
      tags:
        - Application
      summary: Get all applications for the requesting user.
      description: Get all applications for the requesting user.
      operationId: getAllApplicationsForUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
    post:
      tags:
        - Application
      summary: Create a new application for the requesting user.
      description: >-
        Create a new application for the requesting user.
          The `schema` field in the request body should be a valid JSON Schema that describes the data
          that will be uploaded in the future.
      operationId: createApplicationForUser
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ApplicationCreateRequestSchema"
      security:
        - bearer_token: []
  /applications/:domain:
    get:
      tags:
        - Application
      summary: Get an application by domain for the requesting user.
      description: Get an application by domain for the requesting user.
      operationId: getApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
    patch:
      tags:
        - Application
      summary: Update an application by domain for the requesting user.
      description: Update an application by domain for the requesting user.
      operationId: updateApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to update.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationUpdateRequestSchema"
      security:
        - bearer_token: []
    delete:
      tags:
        - Application
      summary: Delete an application by domain for the requesting user.
      description: Delete an application by domain for the requesting user.
      operationId: deleteApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDeleteResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to delete.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications/:domain/data:
    post:
      tags:
        - Application
      summary: Create a new data entry for an application for the requesting user.
      description: >-
        Create a new data entry for an application for the requesting user.
          The shape of the request body will depend on the schema that was used to create the application.
      operationId: createApplicationData
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationDataRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - Application
      summary: Get data entries for an application for the requesting user.
      description: Get paginated data entries for an application for the requesting
        user in descending order by creation date.
      operationId: getApplicationData
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataPaginatedResponseSchema"
          description: Successful response
        "400":
          description: The server could not handle your request. Please verify that your
            request is correct.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: BadRequestError
                  description: The server could not handle your request. Please verify that your
                    request is correct.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: The index cursor where to start the list of data entries. Defaults
            to `0`.
          in: query
          required: false
          schema:
            type: number
        - name: limit
          description: The number of data entries to return. Defaults to `50`.
          in: query
          required: false
          schema:
            type: number
      security:
        - bearer_token: []
  /applications/:domain/data/csv:
    get:
      tags:
        - Application
      summary: Export all data entries for an application for the requesting user as
        CSV.
      description: Export all data entries for an application for the requesting user
        as CSV.
      operationId: getApplicationDataAsCsv
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: string
                format: binary
          description: Successful binary response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
components:
  schemas:
    RegisterRequestSchema:
      required:
        - username
        - password
        - locale
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          pattern: ^[\w._-]*$
          type: string
        password:
          minLength: 8
          type: string
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    RegisterResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    LoginRequestSchema:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    LoginResponseSchema:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      additionalProperties: false
    RegistrationOpenResponseSchema:
      required:
        - open
      type: object
      properties:
        open:
          type: boolean
      additionalProperties: false
    ChangePasswordRequestSchema:
      required:
        - old_password
        - new_password
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      additionalProperties: false
    ChangePasswordResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    UserResponseSchema:
      required:
        - username
        - locale
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        username:
          type: string
        locale:
          type: string
          enum:
            - en
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    UserUpdateRequestSchema:
      type: object
      properties:
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    ApplicationCreateRequestSchema:
      required:
        - name
        - type
        - schema
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        schema:
          type: string
        connectors:
          default: []
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationUpdateRequestSchema:
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationDeleteResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ApplicationResponseSchema:
      required:
        - name
        - owner
        - domain
        - type
        - connectors
        - template
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
        domain:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
        template:
          required:
            - raw_schema
            - schema
          type: object
          properties:
            raw_schema:
              type: string
            schema:
              required:
                - type
                - properties
                - required
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - object
                properties:
                  type: object
                  properties: {}
                  additionalProperties: false
                required:
                  type: array
                  items:
                    type: string
              additionalProperties: false
          additionalProperties: false
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    ApplicationDataRequestSchema:
      required:
        - example
      type: object
      properties:
        example:
          type: string
      additionalProperties: false
    ApplicationDataResponseSchema:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
        payload:
          required:
            - example
          type: object
          properties:
            example:
              type: string
          additionalProperties: false
      additionalProperties: false
    ApplicationDataPaginatedResponseSchema:
      required:
        - result
        - pagination
      type: object
      properties:
        result:
          type: array
          items:
            required:
              - domain
              - createdAt
            type: object
            properties:
              domain:
                type: string
              payload:
                required:
                  - example
                type: object
                properties:
                  example:
                    type: string
                additionalProperties: false
              createdAt:
                format: date-time
                type: string
            additionalProperties: false
        pagination:
          required:
            - limit
            - current
            - previous
            - next
            - total
            - isLast
          type: object
          properties:
            limit:
              type: integer
            current:
              type: integer
            previous:
              type: integer
            next:
              type: integer
            total:
              type: integer
            isLast:
              type: boolean
          additionalProperties: false
      additionalProperties: false
  requestBodies:
    RegisterRequestSchema:
      description: Request body for RegisterRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterRequestSchema"
    RegisterResponseSchema:
      description: Request body for RegisterResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterResponseSchema"
    LoginRequestSchema:
      description: Request body for LoginRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequestSchema"
    LoginResponseSchema:
      description: Request body for LoginResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponseSchema"
    RegistrationOpenResponseSchema:
      description: Request body for RegistrationOpenResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationOpenResponseSchema"
    ChangePasswordRequestSchema:
      description: Request body for ChangePasswordRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordRequestSchema"
    ChangePasswordResponseSchema:
      description: Request body for ChangePasswordResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordResponseSchema"
    UserResponseSchema:
      description: Request body for UserResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserResponseSchema"
    UserUpdateRequestSchema:
      description: Request body for UserUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequestSchema"
    ApplicationCreateRequestSchema:
      description: Request body for ApplicationCreateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationCreateRequestSchema"
    ApplicationUpdateRequestSchema:
      description: Request body for ApplicationUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationUpdateRequestSchema"
    ApplicationDeleteResponseSchema:
      description: Request body for ApplicationDeleteResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
    ApplicationResponseSchema:
      description: Request body for ApplicationResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationResponseSchema"
    ApplicationDataRequestSchema:
      description: Request body for ApplicationDataRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataRequestSchema"
    ApplicationDataResponseSchema:
      description: Request body for ApplicationDataResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataResponseSchema"
    ApplicationDataPaginatedResponseSchema:
      description: Request body for ApplicationDataPaginatedResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
  examples:
    RegisterRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: LgZ0wDoypi2jv-wkEdaR28xoCN9aHfyeEV7BchoI
          password: xcsqif9cca
          locale: en
    RegisterRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: 4I37o_5ARfR7xEgl60l7FmIM0JLLdgDdFE_J1hf.Ik1X_5qC_EeU0rFCDVZqjX0DLuQ0GMINRRC
            password: 0sh8swmh1z
            locale: en
          - username: -ylpQy_aSq8SAmz_c-BcJMJctNXs7eAqscGkbCj4tFPnI8D5dnsW_ylLh2TI.WXQ3nc0yJ4znT2OWUYR
            password: n42j7ne0hg
            locale: en
          - username: ZGSKT9Kwz9s152TGT_Zq_4WSO4.xJtFXDS80ZcwdxbT7WRkoRNdXx05TGB71jG0dE1KCP7Z3UgFuC5bUXTt3KS-a4wAqiP
            password: hfckt0h242
            locale: en
    RegisterResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: rgcg90e0fqj
    RegisterResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: opctu0u03o
          - message: 11whor15e6l
          - message: ocumisr5t6o
    LoginRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: wd0qsxcdwwb
          password: fwa5ke08q3
    LoginRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: 5ke6nqzyu5i
            password: qtt5qeh2prm
          - username: 03u6j3p6eq5h
            password: mq4ii2ci82
          - username: 6h4bo4o528c
            password: 534ferovs5y
    LoginResponseSchema:
      value:
        success: true
        status: 200
        data:
          token: h4p1by3b81f
    LoginResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - token: 14iswe3yn5e
          - token: xika2jyomlr
          - token: s8120a5n4r
    RegistrationOpenResponseSchema:
      value:
        success: true
        status: 200
        data:
          open: true
    RegistrationOpenResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - open: false
          - open: true
          - open: false
    ChangePasswordRequestSchema:
      value:
        success: true
        status: 200
        data:
          old_password: 8gakk6o6ag3
          new_password: zp20qd3ih7
    ChangePasswordRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - old_password: fed3v46ulqt
            new_password: z8kjzmk6jiq
          - old_password: vir976xv6e9
            new_password: hvdxxq7fqmh
          - old_password: caqbb49vekk
            new_password: ad15cinfup
    ChangePasswordResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: 55uxbk483z3
    ChangePasswordResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: tcfika5883
          - message: ut3l8m5sq7m
          - message: 2ztnu089q01
    UserResponseSchema:
      value:
        success: true
        status: 200
        data:
          username: 3zej6j0oap
          locale: en
          createdAt: 2022-12-04T02:04:40.506Z
          lastModifiedAt: 2022-12-04T02:04:40.507Z
    UserResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: 332ff9k779e
            locale: en
            createdAt: 2022-12-04T02:04:40.512Z
            lastModifiedAt: 2022-12-04T02:04:40.512Z
          - username: qhgg3k627ml
            locale: en
            createdAt: 2022-12-04T02:04:40.514Z
            lastModifiedAt: 2022-12-04T02:04:40.514Z
          - username: y6x1blhc7q
            locale: en
            createdAt: 2022-12-04T02:04:40.516Z
            lastModifiedAt: 2022-12-04T02:04:40.516Z
    UserUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          locale: en
    UserUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - locale: en
          - locale: en
          - locale: en
    ApplicationCreateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: nsdaq3u6eph
          type: desktop
          schema: zgv27qzv52s
          connectors: []
    ApplicationCreateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: dqmwvaskbaf
            type: desktop
            schema: ordqmtoft8
            connectors: []
          - name: uosxakmj4a
            type: mobile
            schema: 24b23y3ovrg
            connectors: []
          - name: f28vhzhqj6
            type: server
            schema: 1thsiy4rxt1
            connectors: []
    ApplicationUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: dy9ad1tg2z
          type: server
          connectors:
            - package_url: http://www.51gkicluf7v.com
              language: 7ssugnvrnkf
    ApplicationUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: aez8zqjsgi
            type: server
            connectors:
              - package_url: https://www.3oki76rstv7.gov
                language: 2on7g58dgxj
          - name: jcq2b9a70mt
            type: web
            connectors:
              - package_url: ftp://www.8o2hvt8zci2.gov
                language: ihxdh8akxv9
          - name: bpc9q1qnkew
            type: desktop
            connectors:
              - package_url: https://www.a7tqstq9xgs.net
                language: lwvktgej9hf
    ApplicationDeleteResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: 7tho3bdhjxl
    ApplicationDeleteResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: 6vailgq7gw7
          - message: xicvjrxm0ch
          - message: y0yolmp6i2h
    ApplicationResponseSchema:
      value:
        success: true
        status: 200
        data:
          name: szvpmtqo9q
          owner: falfa9vjzq4
          domain: y9t65q56e9r
          type: mobile
          connectors:
            - package_url: http://www.vnf6bcgoygo.com
              language: rekbbu79tif
          template:
            raw_schema: glcyphknxk
            schema:
              type: object
              properties: {}
              required:
                - bhxr1r3tv2
          createdAt: 2022-12-04T02:04:40.575Z
          lastModifiedAt: 2022-12-04T02:04:40.576Z
    ApplicationResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: tart8y69jvf
            owner: s63v093uznj
            domain: ict1ua10ale
            type: server
            connectors:
              - package_url: https://www.pahdxuteos.com
                language: kd6xkj6km2
            template:
              raw_schema: ox8ecrlbos
              schema:
                type: object
                properties: {}
                required:
                  - ktf4whktl6a
            createdAt: 2022-12-04T02:04:40.586Z
            lastModifiedAt: 2022-12-04T02:04:40.586Z
          - name: x6sohk4qjfp
            owner: 0n4ppi8cpo7c
            domain: awmlueeeiuw
            type: mobile
            connectors:
              - package_url: https://www.eytv7xg7uji.com
                language: 7dz1u6e3a1t
            template:
              raw_schema: uxncg1sp5fi
              schema:
                type: object
                properties: {}
                required:
                  - b004tpik0rj
            createdAt: 2022-12-04T02:04:40.610Z
            lastModifiedAt: 2022-12-04T02:04:40.610Z
          - name: dcpfxwsxy4m
            owner: f42ls6caknd
            domain: v0w1kle5lr
            type: mobile
            connectors:
              - package_url: https://www.hyriubc57r6.gov
                language: 7t0jd47i5bw
            template:
              raw_schema: 3v5948x32bw
              schema:
                type: object
                properties: {}
                required:
                  - djvqhfofbup
            createdAt: 2022-12-04T02:04:40.626Z
            lastModifiedAt: 2022-12-04T02:04:40.626Z
    ApplicationDataRequestSchema:
      value:
        success: true
        status: 200
        data:
          example: pltn9e7szi
    ApplicationDataRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - example: 67fu7cmqy8p
          - example: dprx5uk64yf
          - example: onae5hhco5q
    ApplicationDataResponseSchema:
      value:
        success: true
        status: 200
        data:
          domain: q5l3fp6ff9
          payload:
            example: 0l2o0ori559
    ApplicationDataResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - domain: on86hzp7ba
            payload:
              example: 6c6283xv0d
          - domain: ehn2ocufe0v
            payload:
              example: vfxihq6lyq
          - domain: j149wny7ut
            payload:
              example: 37x3wjrsh
    ApplicationDataPaginatedResponseSchema:
      value:
        success: true
        status: 200
        data:
          result:
            - domain: ykorh2dl6qd
              payload:
                example: 3fx950aj1jb
              createdAt: 2022-12-04T02:04:40.641Z
          pagination:
            limit: 2
            current: 2
            previous: 3
            next: 4
            total: 1
            isLast: true
    ApplicationDataPaginatedResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - result:
              - domain: umcxd3yr54f
                payload:
                  example: ucy357fs1d
                createdAt: 2022-12-04T02:04:40.664Z
            pagination:
              limit: 1
              current: 3
              previous: 2
              next: 3
              total: 1
              isLast: true
          - result:
              - domain: p3ik3hy6yqe
                payload:
                  example: vzw8iegm6x
                createdAt: 2022-12-04T02:04:40.678Z
            pagination:
              limit: 2
              current: 1
              previous: 3
              next: 4
              total: 3
              isLast: false
          - result:
              - domain: cm05m9fja7p
                payload:
                  example: y4j9ov6npq
                createdAt: 2022-12-04T02:04:40.688Z
            pagination:
              limit: 1
              current: 1
              previous: 3
              next: 3
              total: 3
              isLast: true
  securitySchemes:
    bearer_token:
      name: JWT Access Token
      description: An access token granted by the server on user login.
      in: header
      type: http
      scheme: Bearer
      bearerFormat: JWT

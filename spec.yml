openapi: 3.0.2
servers:
  - url: https://$API_URL
info:
  title: Freenalytics API
  description: This site contains the documentation for the Freenalytics API.
  version: 0.1.0
tags:
  - name: Auth
    description: This section contains the supported operations for Auth.
  - name: User
    description: This section contains the supported operations for User.
  - name: Application
    description: This section contains the supported operations for Application.
paths:
  /auth/registration-open:
    get:
      tags:
        - Auth
      summary: Check if user registration is enabled.
      description: Check if user registration is enabled on the server. If it is
        disabled, users will not be able to register new accounts.
      operationId: registrationOpen
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegistrationOpenResponseSchema"
              example:
                $ref: "#/components/examples/RegistrationOpenResponseSchema"
          description: Successful response
      parameters: []
  /auth/register:
    post:
      tags:
        - Auth
      summary: Register a new user account.
      description: Register a new user account. This route will only work if the
        server has enabled user registration.
      operationId: register
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/RegisterResponseSchema"
              example:
                $ref: "#/components/examples/RegisterResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "403":
          description: You do not have access to this resource.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 403
                error:
                  name: ForbiddenRequestError
                  description: You do not have access to this resource.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/RegisterRequestSchema"
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login with your user account.
      description: Login with your user account. Responds with a bearer token to
        authenticate further requests.
      operationId: login
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/LoginResponseSchema"
              example:
                $ref: "#/components/examples/LoginResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/LoginRequestSchema"
  /auth/change-password:
    put:
      tags:
        - Auth
      summary: Change your user account password.
      description: Change your user account password.
      operationId: changePassword
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ChangePasswordResponseSchema"
              example:
                $ref: "#/components/examples/ChangePasswordResponseSchema"
          description: Successful response
        "401":
          description: The credentials provided are incorrect.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: WrongCredentialsError
                  description: The credentials provided are incorrect.
                  message: ""
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ChangePasswordRequestSchema"
      security:
        - bearer_token: []
  /users:
    get:
      tags:
        - User
      summary: Get all users.
      description: Get all registered users in the platform.
      operationId: getAllUsers
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/me:
    get:
      tags:
        - User
      summary: Get the current user.
      description: Get the user information for the requesting user.
      operationId: getCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
  /users/:username:
    patch:
      tags:
        - User
      summary: Update the current user.
      description: Update the user information for the requesting user.
      operationId: updateCurrentUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/UserUpdateRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - User
      summary: Get a user by their username.
      description: Get a user by their username.
      operationId: getUserByUsername
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/UserResponseSchema"
              example:
                $ref: "#/components/examples/UserResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: username
          description: The username of the user to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications:
    get:
      tags:
        - Application
      summary: Get all applications for the requesting user.
      description: Get all applications for the requesting user.
      operationId: getAllApplicationsForUser
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema-arr"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      security:
        - bearer_token: []
    post:
      tags:
        - Application
      summary: Create a new application for the requesting user.
      description: >-
        Create a new application for the requesting user.
          The `schema` field in the request body should be a valid JSON Schema that describes the data
          that will be uploaded in the future.
      operationId: createApplicationForUser
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
      parameters: []
      requestBody:
        $ref: "#/components/requestBodies/ApplicationCreateRequestSchema"
      security:
        - bearer_token: []
  /applications/:domain:
    get:
      tags:
        - Application
      summary: Get an application by domain for the requesting user.
      description: Get an application by domain for the requesting user.
      operationId: getApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to get.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
    patch:
      tags:
        - Application
      summary: Update an application by domain for the requesting user.
      description: Update an application by domain for the requesting user.
      operationId: updateApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to update.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationUpdateRequestSchema"
      security:
        - bearer_token: []
    delete:
      tags:
        - Application
      summary: Delete an application by domain for the requesting user.
      description: Delete an application by domain for the requesting user.
      operationId: deleteApplicationByDomain
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDeleteResponseSchema"
          description: Successful response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to delete.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
  /applications/:domain/data:
    post:
      tags:
        - Application
      summary: Create a new data entry for an application for the requesting user.
      description: >-
        Create a new data entry for an application for the requesting user.
          The shape of the request body will depend on the schema that was used to create the application.
      operationId: createApplicationData
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataResponseSchema"
          description: Successful response
        "400":
          description: The body of this request does not conform to the validation schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: SchemaValidationError
                  description: The body of this request does not conform to the validation schema.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        $ref: "#/components/requestBodies/ApplicationDataRequestSchema"
      security:
        - bearer_token: []
    get:
      tags:
        - Application
      summary: Get data entries for an application for the requesting user.
      description: Get paginated data entries for an application for the requesting
        user in descending order by creation date.
      operationId: getApplicationData
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  data:
                    $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
              example:
                $ref: "#/components/examples/ApplicationDataPaginatedResponseSchema"
          description: Successful response
        "400":
          description: The server could not handle your request. Please verify that your
            request is correct.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 400
                error:
                  name: BadRequestError
                  description: The server could not handle your request. Please verify that your
                    request is correct.
                  message: ""
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
        - name: start
          description: The index cursor where to start the list of data entries. Defaults
            to `0`.
          in: query
          required: false
          schema:
            type: number
        - name: limit
          description: The number of data entries to return. Defaults to `50`.
          in: query
          required: false
          schema:
            type: number
      security:
        - bearer_token: []
  /applications/:domain/data/csv:
    get:
      tags:
        - Application
      summary: Export all data entries for an application for the requesting user as
        CSV.
      description: Export all data entries for an application for the requesting user
        as CSV.
      operationId: getApplicationDataAsCsv
      responses:
        "200":
          content:
            text/csv:
              schema:
                type: string
                format: binary
          description: Successful binary response
        "401":
          description: Please check that you have passed the correct bearer token inside
            the Authentication header.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 401
                error:
                  name: UnauthorizedRequestError
                  description: Please check that you have passed the correct bearer token inside
                    the Authentication header.
                  message: A bearer token is required to access this endpoint.
        "404":
          description: The requested resource was not found by the server.
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  status:
                    type: integer
                  error:
                    type: object
                    properties:
                      name:
                        type: string
                      description:
                        type: string
                      message:
                        type: string
              example:
                success: false
                status: 404
                error:
                  name: ResourceNotFoundError
                  description: The requested resource was not found by the server.
                  message: ""
      parameters:
        - name: domain
          description: The domain of the application to upload the data to.
          in: path
          required: true
          schema:
            type: string
      security:
        - bearer_token: []
components:
  schemas:
    RegisterRequestSchema:
      required:
        - username
        - password
        - locale
      type: object
      properties:
        username:
          maxLength: 20
          minLength: 3
          pattern: ^[\w._-]*$
          type: string
        password:
          minLength: 8
          type: string
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    RegisterResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    LoginRequestSchema:
      required:
        - username
        - password
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      additionalProperties: false
    LoginResponseSchema:
      required:
        - token
      type: object
      properties:
        token:
          type: string
      additionalProperties: false
    RegistrationOpenResponseSchema:
      required:
        - open
      type: object
      properties:
        open:
          type: boolean
      additionalProperties: false
    ChangePasswordRequestSchema:
      required:
        - old_password
        - new_password
      type: object
      properties:
        old_password:
          type: string
        new_password:
          type: string
      additionalProperties: false
    ChangePasswordResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    UserResponseSchema:
      required:
        - username
        - locale
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        username:
          type: string
        locale:
          type: string
          enum:
            - en
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    UserUpdateRequestSchema:
      type: object
      properties:
        locale:
          type: string
          enum:
            - en
      additionalProperties: false
    ApplicationCreateRequestSchema:
      required:
        - name
        - type
        - schema
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        schema:
          type: string
        connectors:
          default: []
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationUpdateRequestSchema:
      type: object
      properties:
        name:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
      additionalProperties: false
    ApplicationDeleteResponseSchema:
      required:
        - message
      type: object
      properties:
        message:
          type: string
      additionalProperties: false
    ApplicationResponseSchema:
      required:
        - name
        - owner
        - domain
        - type
        - connectors
        - template
        - createdAt
        - lastModifiedAt
      type: object
      properties:
        name:
          type: string
        owner:
          type: string
        domain:
          type: string
        type:
          enum:
            - mobile
            - web
            - server
            - desktop
            - other
          type: string
        connectors:
          type: array
          items:
            required:
              - package_url
              - language
            type: object
            properties:
              package_url:
                format: uri
                type: string
              language:
                type: string
            additionalProperties: false
        template:
          required:
            - raw_schema
            - schema
          type: object
          properties:
            raw_schema:
              type: string
            schema:
              required:
                - type
                - properties
                - required
              type: object
              properties:
                type:
                  type: string
                  enum:
                    - object
                properties:
                  type: object
                  properties: {}
                  additionalProperties: false
                required:
                  type: array
                  items:
                    type: string
              additionalProperties: false
          additionalProperties: false
        createdAt:
          format: date-time
          type: string
        lastModifiedAt:
          format: date-time
          type: string
      additionalProperties: false
    ApplicationDataRequestSchema:
      required:
        - example
      type: object
      properties:
        example:
          type: string
      additionalProperties: false
    ApplicationDataResponseSchema:
      required:
        - domain
      type: object
      properties:
        domain:
          type: string
        payload:
          required:
            - example
          type: object
          properties:
            example:
              type: string
          additionalProperties: false
      additionalProperties: false
    ApplicationDataPaginatedResponseSchema:
      required:
        - result
        - pagination
      type: object
      properties:
        result:
          type: array
          items:
            required:
              - domain
              - createdAt
            type: object
            properties:
              domain:
                type: string
              payload:
                required:
                  - example
                type: object
                properties:
                  example:
                    type: string
                additionalProperties: false
              createdAt:
                format: date-time
                type: string
            additionalProperties: false
        pagination:
          required:
            - limit
            - current
            - previous
            - next
            - total
            - isLast
          type: object
          properties:
            limit:
              type: integer
            current:
              type: integer
            previous:
              type: integer
            next:
              type: integer
            total:
              type: integer
            isLast:
              type: boolean
          additionalProperties: false
      additionalProperties: false
  requestBodies:
    RegisterRequestSchema:
      description: Request body for RegisterRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterRequestSchema"
    RegisterResponseSchema:
      description: Request body for RegisterResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegisterResponseSchema"
    LoginRequestSchema:
      description: Request body for LoginRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginRequestSchema"
    LoginResponseSchema:
      description: Request body for LoginResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/LoginResponseSchema"
    RegistrationOpenResponseSchema:
      description: Request body for RegistrationOpenResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/RegistrationOpenResponseSchema"
    ChangePasswordRequestSchema:
      description: Request body for ChangePasswordRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordRequestSchema"
    ChangePasswordResponseSchema:
      description: Request body for ChangePasswordResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ChangePasswordResponseSchema"
    UserResponseSchema:
      description: Request body for UserResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserResponseSchema"
    UserUpdateRequestSchema:
      description: Request body for UserUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserUpdateRequestSchema"
    ApplicationCreateRequestSchema:
      description: Request body for ApplicationCreateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationCreateRequestSchema"
    ApplicationUpdateRequestSchema:
      description: Request body for ApplicationUpdateRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationUpdateRequestSchema"
    ApplicationDeleteResponseSchema:
      description: Request body for ApplicationDeleteResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDeleteResponseSchema"
    ApplicationResponseSchema:
      description: Request body for ApplicationResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationResponseSchema"
    ApplicationDataRequestSchema:
      description: Request body for ApplicationDataRequestSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataRequestSchema"
    ApplicationDataResponseSchema:
      description: Request body for ApplicationDataResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataResponseSchema"
    ApplicationDataPaginatedResponseSchema:
      description: Request body for ApplicationDataPaginatedResponseSchema.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ApplicationDataPaginatedResponseSchema"
  examples:
    RegisterRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: mizzt3LnyZiZVaU3ZJzvsoDAtypGkskYZ0Y8KIeiVL3WBUODEK54Mih9phOLEJLmuk4tzg5fOm
          password: id6khf8y7ge
          locale: en
    RegisterRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: bHqyqhydd0ZSdWUo-EyIj7nR
            password: xgxoro28u8o
            locale: en
          - username: zNo-I5DHDOllz-5MGBugzW27Lp2pu
            password: kjklnbqot9h
            locale: en
          - username: mQ6icynvoZVhStx6RIfSwF3RrMH4KBEahJll
            password: x60lwrwt2ro
            locale: en
    RegisterResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: uy7j6p7b18
    RegisterResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: i1kqthjylk
          - message: dbl385i7gig
          - message: 88bvqdde5kx
    LoginRequestSchema:
      value:
        success: true
        status: 200
        data:
          username: l1sk2ratwxl
          password: uz9ii4qs18
    LoginRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: p9ma7m27k2
            password: 7t25paa5nv
          - username: eesriq072hq
            password: jl442129qe
          - username: rh39f1qifxe
            password: kk2gy6rwifh
    LoginResponseSchema:
      value:
        success: true
        status: 200
        data:
          token: solk7u4se7
    LoginResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - token: gbtwgrvu31j
          - token: 3aj5zs1fx09
          - token: kbzjyh35zp
    RegistrationOpenResponseSchema:
      value:
        success: true
        status: 200
        data:
          open: false
    RegistrationOpenResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - open: true
          - open: true
          - open: false
    ChangePasswordRequestSchema:
      value:
        success: true
        status: 200
        data:
          old_password: 0pgfctoyosy
          new_password: ruqhbkagku
    ChangePasswordRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - old_password: ve2iodvcyrd
            new_password: vs6nher9r6o
          - old_password: fh3j6vr0s7d
            new_password: zy670nwpkn
          - old_password: o051zg8zz2m
            new_password: xqsw99sw9w
    ChangePasswordResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: fbgwqbzctrb
    ChangePasswordResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: 0jhc6dxzvbx4
          - message: chm0uqt1qm
          - message: 19qab4sjzsb
    UserResponseSchema:
      value:
        success: true
        status: 200
        data:
          username: uyz3i1ujj6l
          locale: en
          createdAt: 2022-10-30T21:48:16.884Z
          lastModifiedAt: 2022-10-30T21:48:16.884Z
    UserResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - username: jivdzstsugr
            locale: en
            createdAt: 2022-10-30T21:48:16.889Z
            lastModifiedAt: 2022-10-30T21:48:16.889Z
          - username: m7e921t82zh
            locale: en
            createdAt: 2022-10-30T21:48:16.891Z
            lastModifiedAt: 2022-10-30T21:48:16.891Z
          - username: wj7yelvzj7i
            locale: en
            createdAt: 2022-10-30T21:48:16.893Z
            lastModifiedAt: 2022-10-30T21:48:16.893Z
    UserUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          locale: en
    UserUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - locale: en
          - locale: en
          - locale: en
    ApplicationCreateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: e7pyy8nkl5a
          type: server
          schema: bxnkoy0xjvr
          connectors: []
    ApplicationCreateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: z8sb6x1mp
            type: mobile
            schema: njcmad2q38j
            connectors: []
          - name: xh90fap1si
            type: mobile
            schema: 9mtpws0qpp
            connectors: []
          - name: no8schmq71p
            type: other
            schema: 20e9wxztcuj
            connectors: []
    ApplicationUpdateRequestSchema:
      value:
        success: true
        status: 200
        data:
          name: 5fbii02x1wu
          type: server
          connectors:
            - package_url: http://www.wgqpn1xfwq8.net
              language: yek54k80s4e
    ApplicationUpdateRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: le8vp98n78b
            type: desktop
            connectors:
              - package_url: ftp://www.wraaxpahu6q.com
                language: bi91o60ecuc
          - name: y987rw7kd8j
            type: desktop
            connectors:
              - package_url: https://www.3c48z9gg4y1.net
                language: zjt9fsiab6h
          - name: 5pmp85ycfzt
            type: desktop
            connectors:
              - package_url: https://www.t3758hb1279.net
                language: 4du8ndtbpak
    ApplicationDeleteResponseSchema:
      value:
        success: true
        status: 200
        data:
          message: u7eu1szysve
    ApplicationDeleteResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - message: 2pysrrv4p73
          - message: 8w7gnh2dbvl
          - message: grdz26u9zg
    ApplicationResponseSchema:
      value:
        success: true
        status: 200
        data:
          name: l2ou66on1k
          owner: qq6lx90xtc
          domain: fz83oyluj8l
          type: server
          connectors:
            - package_url: https://www.1482mfz63m8.net
              language: 7g1enuu0il
          template:
            raw_schema: 06q5ou1k1e85
            schema:
              type: object
              properties: {}
              required:
                - fblfbw8b5j
          createdAt: 2022-10-30T21:48:16.942Z
          lastModifiedAt: 2022-10-30T21:48:16.942Z
    ApplicationResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - name: ay30xk56g7s
            owner: wxmtmt27tad
            domain: 3b3v1g9mxzz
            type: other
            connectors:
              - package_url: https://www.fu63txf55rq.com
                language: 98f4jjaq61
            template:
              raw_schema: kvhb0mjm1oi
              schema:
                type: object
                properties: {}
                required:
                  - lvxaj471i1g
            createdAt: 2022-10-30T21:48:16.951Z
            lastModifiedAt: 2022-10-30T21:48:16.951Z
          - name: e8hgbqj967
            owner: wsnet3xswpj
            domain: 1zlnyphcqmw
            type: web
            connectors:
              - package_url: http://www.1ubi8hojgwz.gov
                language: 6uz07bw9e1o
            template:
              raw_schema: stwjkwu4c48
              schema:
                type: object
                properties: {}
                required:
                  - vgiql7bioa8
            createdAt: 2022-10-30T21:48:16.961Z
            lastModifiedAt: 2022-10-30T21:48:16.961Z
          - name: zjandfx9xs
            owner: mhwtm9rczv
            domain: atvkxicwla
            type: mobile
            connectors:
              - package_url: ftp://www.txi4upnucy.gov
                language: 44okmpk26ll
            template:
              raw_schema: 3vnshirh2nm
              schema:
                type: object
                properties: {}
                required:
                  - daf73lo8e3
            createdAt: 2022-10-30T21:48:16.971Z
            lastModifiedAt: 2022-10-30T21:48:16.971Z
    ApplicationDataRequestSchema:
      value:
        success: true
        status: 200
        data:
          example: 5e1ymo10he5
    ApplicationDataRequestSchema-arr:
      value:
        success: true
        status: 200
        data:
          - example: loh60t7qhui
          - example: sae73vi2jfr
          - example: 168s7xx2gbs
    ApplicationDataResponseSchema:
      value:
        success: true
        status: 200
        data:
          domain: 1vuzr4rjoil
          payload:
            example: fg7sx40o20n
    ApplicationDataResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - domain: 9vbof1jxs5j
            payload:
              example: w12n1b6qbjo
          - domain: y9mwwq0wb3k
            payload:
              example: 1pggutmxbci
          - domain: bpnphgwivpw
            payload:
              example: nwlc58hu8ab
    ApplicationDataPaginatedResponseSchema:
      value:
        success: true
        status: 200
        data:
          result:
            - domain: qgsqwp0pqj
              payload:
                example: xq9gaxosk59
              createdAt: 2022-10-30T21:48:16.990Z
          pagination:
            limit: 3
            current: 2
            previous: 1
            next: 4
            total: 2
            isLast: true
    ApplicationDataPaginatedResponseSchema-arr:
      value:
        success: true
        status: 200
        data:
          - result:
              - domain: 9szxc0p8xs7
                payload:
                  example: q1gwdzz0649
                createdAt: 2022-10-30T21:48:17.003Z
            pagination:
              limit: 3
              current: 3
              previous: 4
              next: 3
              total: 1
              isLast: true
          - result:
              - domain: 2s0r5ao7ia8
                payload:
                  example: 623sq0it5c8
                createdAt: 2022-10-30T21:48:17.013Z
            pagination:
              limit: 4
              current: 3
              previous: 1
              next: 1
              total: 1
              isLast: true
          - result:
              - domain: 54z5c7c2skl
                payload:
                  example: h167m8nq07p
                createdAt: 2022-10-30T21:48:17.029Z
            pagination:
              limit: 3
              current: 3
              previous: 3
              next: 1
              total: 1
              isLast: false
  securitySchemes:
    bearer_token:
      name: JWT Access Token
      description: An access token granted by the server on user login.
      in: header
      type: http
      scheme: Bearer
      bearerFormat: JWT
